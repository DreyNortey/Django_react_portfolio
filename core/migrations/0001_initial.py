# Generated by Django 5.1.7 on 2025-03-30 01:49

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('excerpt', models.TextField()),
                ('date', models.DateField()),
                ('category', models.CharField(max_length=50)),
                ('image', models.ImageField(upload_to='blog')),
                ('url', models.URLField()),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('level', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('issue_date', models.CharField(max_length=30)),
                ('icon', models.CharField(max_length=50)),
                ('icon_color', models.CharField(max_length=20)),
                ('verify_url', models.URLField()),
                ('order', models.PositiveSmallIntegerField(default=0)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField(validators=[django.core.validators.MinLengthValidator(10)])),
                ('date_sent', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-date_sent'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('image', models.ImageField(upload_to='projects')),
                ('github_url', models.URLField()),
                ('demo_url', models.URLField()),
                ('featured', models.BooleanField(default=False)),
                ('date_created', models.DateField()),
                ('order', models.PositiveSmallIntegerField(default=0)),
                ('categories', models.CharField(help_text="Comma-separated categories (e.g., 'aws,automation')", max_length=200)),
                ('tags', models.CharField(help_text="Comma-separated tags with colors (e.g., 'AWS Lambda:blue,S3:blue')", max_length=300)),
            ],
            options={
                'ordering': ['-featured', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('icon', models.CharField(max_length=50)),
                ('icon_color', models.CharField(blank=True, max_length=20)),
                ('category', models.CharField(choices=[('cloud', 'Cloud Platforms'), ('devops', 'Infrastructure & DevOps'), ('programming', 'Programming & Scripting'), ('it', 'IT Support & Networking')], max_length=20)),
                ('order', models.PositiveSmallIntegerField(default=0)),
            ],
            options={
                'ordering': ['category', 'order'],
            },
        ),
    ]
